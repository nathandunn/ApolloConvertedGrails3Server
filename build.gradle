buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:$webdriverBinariesVersion"
    }
}

version "3.0.0-SNAPSHOT"
//group "apollo"
group "org.bbop.apollo"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.energizedwork.webdriver-binaries"

//apply plugin: 'java'
//apply plugin: 'groovy'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    maven {
        url "https://repo.grails.org/grails/core"
    }
    // added
//    maven {
//        url "https://dl.bintray.com/ajay-kumar/plugins"
//    }


}

// In this section you declare the dependencies for your production and test code
dependencies {
    // START added dependencies
//    compile 'org.grails.plugins:swagger:1.0.1'
//    annotationProcessor "io.micronaut.configuration:micronaut-openapi:1.5.0"
//    compile "io.swagger.core.v3:swagger-annotations:2.1.1"
//    implementation "io.swagger.core.v3:swagger-annotations"
//    compileOnly "io.micronaut.configuration:micronaut-openapi:1.4.0"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi:1.5.0"
//    compile "io.swagger.core.v3:swagger-annotations:2.1.1"
    compile "io.swagger.core.v3:swagger-annotations:2.1.1"
    compileOnly "io.micronaut.configuration:micronaut-openapi:1.5.0"

//    runtime 'mysql:mysql-connector-java:5.1.49'
    runtime 'org.postgresql:postgresql:9.4.1212'


    // HTSJDK
    compile group: 'com.github.samtools', name: 'htsjdk', version: '2.21.3'

    // svg generation
//    compile group: 'org.apache.xmlgraphics', name: 'batik-svg-dom', version: '1.9' compile group:
//    'org.apache.xmlgraphics', name: 'batik-svggen', version: '1.7'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.18'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'commons-codec:commons-codec:1.14'
    compile 'commons-collections:commons-collections:3.2.2'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2'



//    compile "org.grails.plugins:rest-api-doc:0.6.1"
//    compile ":spring-websocket:1.3.1"
    compile 'org.grails.plugins:grails-spring-websocket:2.5.0.RC1'
//    compile 'org.grails.plugins:grails-spring-websocket:2.4.1'

    // shiro:
    compile 'org.grails.plugins:grails-shiro:3.3'

    // spring security:
//    compile 'org.grails.plugins:spring-security-core:4.0.0'
//    compile 'org.grails.plugins:spring-security-core:3.3.1'


    // END added dependencies

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.16.Final"
    compile "org.hibernate:hibernate-validator:6.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
//    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
//    testCompile "org.grails.plugins:geb:1.1.2"
//    testCompile "org.grails:grails-test-mixins:3.3.0"
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
//    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"

    testCompile "org.grails.plugins:geb"
//    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
//    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
//    testRuntime "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}

webdriverBinaries {
//    chromedriver "$chromeDriverVersion"
//    geckodriver "$geckodriverVersion"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
//    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
//    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
//    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
}

